---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: ruby-tracer-clone-task
spec:
  params:
  - name: revision
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: clone
      # alpine/git:latest
      image: public.ecr.aws/docker/library/alpine:latest
      script: |
        #!/bin/sh
        echo "Installing git"
        apk fix && apk --no-cache --update add git gpg less openssh patch
        echo "Cloning repo"
        cd /workspace && git clone --depth 1 -b $(params.revision) https://github.com/instana/ruby-sensor
        ls -lah /workspace
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: ruby-tracer-unittest-rails-sqlite3-task
spec:
  params:
  - name: imageDigest
    type: string
  - name: gemfile
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: rails
        - name: BUNDLE_GEMFILE
          value: $(params.gemfile)
        - name: DATABASE_URL
          value: "sqlite3::memory:"
      workingDir: /workspace/ruby-sensor/
      command:
      - /workspace/ruby-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: ruby-tracer-unittest-rails-mysql2-task
spec:
  sidecars:
  # MySQL (compatible Mariadb)
  - name: mariadb
    # mariadb:11.3.2
    image: public.ecr.aws/docker/library/mariadb:11.3.2
    startupProbe:
      initialDelaySeconds: 10
      tcpSocket:
        port: 3306
    env:
      - name: MYSQL_ROOT_PASSWORD # or MARIADB_ROOT_PASSWORD
        value: passw0rd
      - name: MYSQL_DATABASE # or MARIADB_DATABASE
        value: ci_test
  params:
  - name: imageDigest
    type: string
  - name: gemfile
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: rails
        - name: BUNDLE_GEMFILE
          value: $(params.gemfile)
        - name: DATABASE_URL
          value: "mysql2://root:passw0rd@127.0.0.1:3306/ci_test"
      workingDir: /workspace/ruby-sensor/
      command:
      - /workspace/ruby-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: ruby-tracer-unittest-rails-postgres-task
spec:
  sidecars:
  - name: postgres
    # postgres:16.2-bookworm
    image: public.ecr.aws/docker/library/postgres:16.2-bookworm
    startupProbe:
      initialDelaySeconds: 10
      tcpSocket:
        port: 5432
    env:
      - name: POSTGRES_DB
        value: 'ci_test'
      - name: POSTGRES_USER
        value: 'root'
      - name: POSTGRES_PASSWORD
        value: 'passw0rd'
  params:
  - name: imageDigest
    type: string
  - name: gemfile
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: rails
        - name: BUNDLE_GEMFILE
          value: $(params.gemfile)
        - name: DATABASE_URL
          value: "postgres://root:passw0rd@127.0.0.1:5432/ci_test"
      workingDir: /workspace/ruby-sensor/
      command:
      - /workspace/ruby-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: ruby-tracer-unittest-aws-libraries-task
spec:
  sidecars:
  # Amazon DynamoDB
  - name: dynamodb
    # amazon/dynamodb-local:2.3.0
    image: public.ecr.aws/aws-dynamodb-local/aws-dynamodb-local:2.3.0
    startupProbe:
      tcpSocket:
        port: 8000
      initialDelaySeconds: 10
  # Amazon S3
  - name: s3
    # minio/minio:latest
    image: quay.io/minio/minio
    command:
      - /usr/bin/minio
      - server
      - /data
  # Amazon SNS
  - name: sns
    # s12v/sns:latest
    image: public.ecr.aws/redbox-public/s12v/sns:latest
  # Amazon SQS
  - name: sqs
    # softwaremill/elasticmq-native:1.5.7
    image: public.ecr.aws/sprig/elasticmq-native
  params:
  - name: imageDigest
    type: string
  - name: gemfile
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: libraries
        - name: BUNDLE_GEMFILE
          value: $(params.gemfile)
      workingDir: /workspace/ruby-sensor/
      command:
      - /workspace/ruby-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: ruby-tracer-unittest-redis-libraries-task
spec:
  sidecars:
  # Redis
  - name: redis
    # redis:7.2.4-bookworm
    image: public.ecr.aws/docker/library/redis:7.2.4-bookworm
    startupProbe:
      initialDelaySeconds: 10
      tcpSocket:
        port: 6379
  params:
  - name: imageDigest
    type: string
  - name: gemfile
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: libraries
        - name: BUNDLE_GEMFILE
          value: $(params.gemfile)
      workingDir: /workspace/ruby-sensor/
      command:
      - /workspace/ruby-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: ruby-tracer-unittest-memcached-libraries-task
spec:
  sidecars:
  # Memcached
  - name: memcached
    # memcached:1.6.24-bookworm
    image: public.ecr.aws/docker/library/memcached:1.6.24-bookworm
    startupProbe:
      tcpSocket:
        port: 11211
      initialDelaySeconds: 20
  params:
  - name: imageDigest
    type: string
  - name: gemfile
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: libraries
        - name: BUNDLE_GEMFILE
          value: $(params.gemfile)
      workingDir: /workspace/ruby-sensor/
      command:
      - /workspace/ruby-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: ruby-tracer-unittest-mongo-libraries-task
spec:
  sidecars:
  - name: mongo
    # mongo:5.0.25-focal
    image: public.ecr.aws/docker/library/mongo:5-focal
    startupProbe:
      initialDelaySeconds: 10
      tcpSocket:
        port: 27017
  params:
  - name: imageDigest
    type: string
  - name: gemfile
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: libraries
        - name: BUNDLE_GEMFILE
          value: $(params.gemfile)
      workingDir: /workspace/ruby-sensor/
      command:
      - /workspace/ruby-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: ruby-tracer-unittest-default-libraries-task
spec:
  params:
  - name: imageDigest
    type: string
  - name: configuration
    type: string
  - name: gemfile
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: $(params.configuration)
        - name: BUNDLE_GEMFILE
          value: $(params.gemfile)
      workingDir: /workspace/ruby-sensor/
      command:
      - /workspace/ruby-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: ruby-tracer-unittest-sequel-sqlite3-task
spec:
  params:
  - name: imageDigest
    type: string
  - name: gemfile
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: libraries
        - name: BUNDLE_GEMFILE
          value: $(params.gemfile)
        - name: DATABASE_URL
          value: "sqlite3::memory:"
      workingDir: /workspace/ruby-sensor/
      command:
      - /workspace/ruby-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: ruby-tracer-unittest-sequel-mysql2-task
spec:
  sidecars:
  # MySQL (compatible Mariadb)
  - name: mariadb
    # mariadb:11.3.2
    image: public.ecr.aws/docker/library/mariadb:11.3.2
    startupProbe:
      initialDelaySeconds: 10
      tcpSocket:
        port: 3306
    env:
      - name: MYSQL_ROOT_PASSWORD # or MARIADB_ROOT_PASSWORD
        value: passw0rd
      - name: MYSQL_DATABASE # or MARIADB_DATABASE
        value: ci_test
  params:
  - name: imageDigest
    type: string
  - name: gemfile
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: libraries
        - name: BUNDLE_GEMFILE
          value: $(params.gemfile)
        - name: DATABASE_URL
          value: "mysql2://root:passw0rd@127.0.0.1:3306/ci_test"
      workingDir: /workspace/ruby-sensor/
      command:
      - /workspace/ruby-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: ruby-generate-currency-report-task
spec:
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: generate-currency-report
      # 3.10-bookworm
      image: public.ecr.aws/docker/library/python:3.10-bookworm
      script: |
        #!/usr/bin/env bash

        cd /workspace/ruby-sensor/.tekton/.currency

        python -m venv /tmp/venv
        source /tmp/venv/bin/activate
        pip install -r resources/requirements.txt

        python scripts/generate_report.py
        if [ $? -ne 0 ]; then
            echo "Error occured while generating the ruby tracer currency report." >&2
            exit 1
        fi
        cat docs/report.md
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: ruby-upload-currency-report-task
spec:
  params:
    - name: github-token-secret
      default: instanacd-github-api-token
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: upload-currency-report
      # alpine/git:2.43.0
      image: public.ecr.aws/docker/library/alpine:latest
      env:
        - name: GH_ENTERPRISE_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.github-token-secret)
              key: "GH_ENTERPRISE_TOKEN"
      script: |
        #!/bin/sh

        cd /workspace        
        git clone https://oauth2:$GH_ENTERPRISE_TOKEN@github.ibm.com/instana/tracer-reports.git

        if [ $? -ne 0 ]; then
            echo "The attempt to clone the tracer-reports repository failed, preventing the upload of ruby tracer currency report." >&2
            exit 1
        fi

        cd tracer-reports

        cp ../ruby-sensor/.tekton/.currency/docs/report.md ./automated/currency/ruby/report.md

        git config user.name "Instanacd PAT for GitHub Enterprise"
        git config user.email instana.ibm.github.enterprise@ibm.com
        
        git add .
        
        git commit -m "chore: Updated ruby currency report"
        git push origin main
