version: 2.1

library_gemfile: &library_gemfile
  gemfile:
    - "./gemfiles/aws_30.gemfile"
    - "./gemfiles/aws_60.gemfile"
    - "./gemfiles/cuba_30.gemfile"
    - "./gemfiles/cuba_40.gemfile"
    - "./gemfiles/dalli_20.gemfile"
    - "./gemfiles/dalli_30.gemfile"
    - "./gemfiles/dalli_32.gemfile"
    - "./gemfiles/excon_079.gemfile"
    - "./gemfiles/excon_0100.gemfile"
    - "./gemfiles/excon_100.gemfile"
    - "./gemfiles/graphql_10.gemfile"
    - "./gemfiles/graphql_20.gemfile"
    - "./gemfiles/grpc_10.gemfile"
    - "./gemfiles/net_http_01.gemfile"
    - "./gemfiles/rack_20.gemfile"
    - "./gemfiles/rack_30.gemfile"
    - "./gemfiles/redis_40.gemfile"
    - "./gemfiles/redis_50.gemfile"
    - "./gemfiles/rest_client_20.gemfile"
    - "./gemfiles/resque_122.gemfile"
    - "./gemfiles/resque_20.gemfile"
    - "./gemfiles/roda_20.gemfile"
    - "./gemfiles/roda_30.gemfile"
    - "./gemfiles/sidekiq_60.gemfile"
    - "./gemfiles/sidekiq_65.gemfile"
    - "./gemfiles/sidekiq_70.gemfile"
    - "./gemfiles/sinatra_22.gemfile"
    - "./gemfiles/sinatra_30.gemfile"
    - "./gemfiles/sinatra_40.gemfile"
    - "./gemfiles/shoryuken_50.gemfile"
    - "./gemfiles/shoryuken_60.gemfile"
    - "./gemfiles/mongo_216.gemfile"
    - "./gemfiles/mongo_219.gemfile"
executors:
  ruby_33_lint:
    docker:
      - image: public.ecr.aws/docker/library/ruby:3.4
  base:
    parameters:
      ruby_version:
        type: string
        default: "3.1"
    docker:
      - image: public.ecr.aws/docker/library/ruby:<<parameters.ruby_version>>
        environment:
          MEMCACHED_HOST: '127.0.0.1:11211'
          REDIS_URL: 'redis://127.0.0.1:6379'
          DATABASE_URL: 'sqlite3::memory:'
      - image: public.ecr.aws/docker/library/memcached
      - image: public.ecr.aws/docker/library/redis
      - image: public.ecr.aws/aws-dynamodb-local/aws-dynamodb-local
      - image: quay.io/minio/minio
        command: ["server", "/data"]
      - image: public.ecr.aws/redbox-public/s12v/sns:latest
      - image: public.ecr.aws/sprig/elasticmq-native
      - image: public.ecr.aws/docker/library/mongo:5-focal
  mysql2:
    parameters:
      ruby_version:
        type: string
        default: "3.1"
    docker:
      - image: public.ecr.aws/docker/library/ruby:<<parameters.ruby_version>>
        environment:
          DATABASE_URL: "mysql2://root@127.0.0.1:3306/ci_test"
      - image: public.ecr.aws/docker/library/mariadb
        environment:
          MYSQL_DATABASE: 'ci_test'
          MYSQL_USER: 'root'
          MYSQL_PASSWORD: ''
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_ROOT_HOST: '%'
  postgres:
    parameters:
      ruby_version:
        type: string
        default: "3.1"
    docker:
      - image: public.ecr.aws/docker/library/ruby:<<parameters.ruby_version>>
        environment:
          DATABASE_URL: "postgres://postgres:test@127.0.0.1:5432/ci_test"
      - image: public.ecr.aws/docker/library/postgres
        environment:
          POSTGRES_PASSWORD: 'test'
          POSTGRES_DB: 'ci_test'
commands:
  setup:
    steps:
      - run:
          name: Update RubyGems
          command: |
            gem update --system
            gem --version
      - run:
          name: Install Bundler
          command: |
            gem install bundler
            bundler --version
            bundle config set path './vendor/bundle'
      - run:
          name: Install Dependencies
          command: |
            bundle check || bundle install
  run_sonarqube:
    steps:
      - run:
          name: Install jq
          command: |
            apt-get update
            apt-get install jq -y
      - run:
          name: Install dependencies for coverage merge
          command: |
            bundler --version
            bundle config set path './vendor/bundle'
            bundle check || bundle install
          environment:
            BUNDLE_GEMFILE: './Gemfile'
      - run:
          name: Fetching partial coverage reports from workflow jobs
          command: |
            ./download.sh
      - run:
          name: Merging partial coverage reports for reporting
          command: |
            bundle exec rake coverage:merge_reports --trace
          environment:
            BUNDLE_GEMFILE: './Gemfile'
      - run:
          name: Run SonarQube to report the coverage
          environment:
            SONAR_TOKEN: $SONAR_TOKEN
          command: |
            export SONAR_SCANNER_VERSION=7.2.0.5079
            export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux-x64
            curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux-x64.zip
            unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
            export PATH=$SONAR_SCANNER_HOME/bin:$PATH
            export SONAR_SCANNER_OPTS="-server"
            if [[ -n "${CIRCLE_PR_NUMBER}" ]]; then
              sonar-scanner \
                -Dsonar.organization=instana \
                -Dsonar.projectKey=instana_ruby-sensor \
                -Dsonar.sources=. \
                -Dsonar.host.url="${SONARQUBE_URL}" \
                -Dsonar.pullrequest.key="${CIRCLE_PR_NUMBER}" \
                -Dsonar.pullrequest.branch="${CIRCLE_BRANCH}"
            else
              sonar-scanner \
                -Dsonar.organization=instana \
                -Dsonar.projectKey=instana_ruby-sensor \
                -Dsonar.sources=. \
                -Dsonar.host.url="${SONARQUBE_URL}" \
                -Dsonar.branch.name="${CIRCLE_BRANCH}"
            fi
      - store_artifacts:
          path: partial_coverage_results
      - store_artifacts:
          path: coverage
  run_tests:
    steps:
      - run:
          name: Run Tests
          command: |
            mkdir _junit
            bundle exec rake
      - store_test_results:
          path: ~/project/_junit
      - store_artifacts:
          path: coverage
  run_rubocop:
    steps:
      - run:
          name: Run Tests
          command: |
            bundle exec rubocop
  publish_gem:
    steps:
      - run:
          name: Setup Access
          command: |
            mkdir -p ~/.gem
            echo -e "---\r\n:rubygems_api_key: $RUBYGEMS_API_KEY" > ~/.gem/credentials
            chmod 0600 ~/.gem/credentials
      - run:
          name: Publish Gem
          command: |
            bundle exec rake release[origin]
jobs:
  test_core:
    parameters:
      stack:
        type: string
        default: "base"
      ruby_version:
        type: string
        default: "3.1"
    executor: 
      name: <<parameters.stack>>
      ruby_version: <<parameters.ruby_version>>
    steps:
      - checkout
      - setup
      - run_tests
  test_apprisal:
    parameters:
      stack:
        type: string
        default: "base"
      gemfile:
        type: string
        default: "./gemfiles/aws_30.gemfile"
      ruby_version:
        type: string
        default: "3.1"
    executor: 
      name: <<parameters.stack>>
      ruby_version: <<parameters.ruby_version>>
    environment:
      APPRAISAL_INITIALIZED: "1"
      BUNDLE_GEMFILE: << parameters.gemfile >>
    steps:
      - checkout
      - setup
      - run_tests
  lint:
    executor: ruby_33_lint
    environment:
      BUNDLE_GEMFILE: "./gemfiles/rubocop_162.gemfile"
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            bundle check || bundle install
      - run_rubocop
  report_coverage:
    executor: base
    steps:
      - checkout
      - run_sonarqube
  publish:
    executor: 
      name: "base"
      ruby_version: "3.4"
    steps:
      - checkout
      - setup
      - publish_gem
workflows:
  publish:
    jobs:
      - publish:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
  core:
    jobs:
      - lint
      - test_core:
          name: "test_core-ruby-<<matrix.stack>>-<<matrix.ruby_version>>"
          matrix:
            parameters:
              stack:
                - base
              ruby_version:
                - "3.1"
                - "3.2"
                - "3.3"
                - "3.4"
                - "3.5.0-preview1"
  libraries_ruby_31_32:
    jobs:
      - test_apprisal:
          name: "test_apprisal-<<matrix.gemfile>>-ruby-<<matrix.stack>>-<<matrix.ruby_version>>"
          matrix:
            parameters:
              stack:
                - base
              <<: *library_gemfile
              ruby_version:
                - "3.1"
                - "3.2"
  libraries_ruby_33_35:
    jobs:
      - test_apprisal:
          name: "test_apprisal-<<matrix.gemfile>>-ruby-<<matrix.stack>>-<<matrix.ruby_version>>"
          matrix:
            parameters:
              stack:
                - base
              <<: *library_gemfile
              ruby_version:
                - "3.3"
                - "3.4"
                - "3.5.0-preview1"
            # Currently compiling the native extensions for `grpc`
            # exceeds an internal RAM and/or CPU limit of CircleCI executor,
            # and the job gets terminated with:
            # `Received "killed" signal`
            # Hence we exclude it here for the time being.
            # TODO: Remove this exclusion as soon as pre-built binaries are available
            # on https://rubygems.org/gems/grpc/versions
            exclude:
            - stack: base
              ruby_version: "3.5.0-preview1"
              gemfile: "./gemfiles/grpc_10.gemfile"
  rails_ruby_31_35:
    jobs:
      - test_apprisal:
          name: "test_apprisal-rails-<<matrix.gemfile>>-ruby-<<matrix.stack>>-<<matrix.ruby_version>>"
          matrix:
            parameters:
              stack:
                - base
                - mysql2
                - postgres
              gemfile:
                - "./gemfiles/rails_61.gemfile"
                - "./gemfiles/rails_70.gemfile"
                - "./gemfiles/rails_71.gemfile"
              ruby_version:
                - "3.1"
                - "3.2"
                - "3.3"
                - "3.4"
                - "3.5.0-preview1"             
  rails8_ruby_33_35:
    jobs:
      - test_apprisal:
          name: "test_apprisal-rails-8-<<matrix.gemfile>>-ruby-<<matrix.stack>>-<<matrix.ruby_version>>"
          matrix:
            parameters:
              stack:
                - base
                - mysql2
                - postgres
              gemfile:
                - "./gemfiles/rails_80.gemfile"
              ruby_version:
                - "3.2"
                - "3.3"
                - "3.4"
  sequel:
      jobs:
      - test_apprisal:
          name: "test_apprisal-sequel-<<matrix.gemfile>>-ruby-<<matrix.stack>>-<<matrix.ruby_version>>"
          matrix:
            parameters:
              stack:
                - base
                - mysql2
              gemfile:
                - "./gemfiles/sequel_56.gemfile"
                - "./gemfiles/sequel_57.gemfile"
                - "./gemfiles/sequel_58.gemfile"
              ruby_version:
                - "3.1"
                - "3.2"
                - "3.3"
                - "3.5.0-preview1"
  report_coverage:
    jobs:
      - report_coverage
